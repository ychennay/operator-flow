apiVersion: install.istio.io/v1alpha2
kind: IstioControlPlane
spec:
  hub: gcr.io/istio-release
  tag: release-1.3-latest-daily
  defaultNamespace: istio-system

  # Traffic management feature
  trafficManagement:
    enabled: true
    components:
      pilot:
        enabled: true
        k8s:
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: GODEBUG
              value: gctrace=1
            - name: PILOT_TRACE_SAMPLING
              value: "1"
            - name: CONFIG_NAMESPACE
              value: istio-config
          hpaSpec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-pilot
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  targetAverageUtilization: 80
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            requests:
              cpu: 500m
              memory: 2048Mi
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

  # Policy feature
  policy:
    enabled: true
    components:
      policy:
        enabled: true
        k8s:
          replicaCount: 1
          hpaSpec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-policy
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  targetAverageUtilization: 80
          env:
            - name: GODEBUG
              value: "gctrace=1"
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

  # Telemetry feature
  telemetry:
    enabled: true
    components:
      telemetry:
        enabled: true
        k8s:
          env:
          - name: GODEBUG
            value: "gctrace=1"
          - name: GOMAXPROCS
            value: "6"
          hpaSpec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-telemetry
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  targetAverageUtilization: 80
          replicaCount: 1
          resources:
            requests:
              cpu: 1000m
              memory: 1G
            limits:
              cpu: 4800m
              memory: 4G
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

  # Security feature
  security:
    enabled: true
    components:
      citadel:
        enabled: true
        k8s:
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"
      certManager:
        enabled: false
      nodeAgent:
        enabled: false

  # Config management feature
  configManagement:
    enabled: true
    components:
      galley:
        enabled: true
        k8s:
          replicaCount: 1
          resources:
            requests:
              cpu: 100m
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

  # Auto injection feature
  autoInjection:
    enabled: true
    components:
      injector:
        enabled: true
        k8s:
          replicaCount: 1
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

  # Istio Gateway feature
  gateways:
    enabled: true
    components:
      ingressGateway:
        enabled: true
        k8s:
          hpaSpec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-ingressgateway
            metrics:
            - type: Resource
              resource:
                name: cpu
                targetAverageUtilization: 80
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 1024Mi
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

      egressGateway:
        enabled: false
        k8s:
          hpaSpec:
            maxReplicas: 5
            minReplicas: 1
            scaleTargetRef:
              apiVersion: apps/v1
              kind: Deployment
              name: istio-egressgateway
            metrics:
              - type: Resource
                resource:
                  name: cpu
                  targetAverageUtilization: 80
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 2000m
              memory: 256Mi
          strategy:
            rollingUpdate:
              maxSurge: "100%"
              maxUnavailable: "25%"

  # Global values passed through to helm global.yaml.
  values:
    global:
      logging:
        level: "default:info"
      logAsJson: false
      k8sIngress:
        enabled: false
        gatewayName: ingressgateway
        enableHttps: false
      proxy:
        image: proxyv2
        clusterDomain: "cluster.local"
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 2000m
            memory: 1024Mi
        concurrency: 2
        accessLogFile: ""
        accessLogFormat: ""
        accessLogEncoding: TEXT
        envoyAccessLogService:
          enabled: false
          host: # example: accesslog-service.istio-system
          port: # example: 15000
        logLevel: warning
        componentLogLevel: "misc:error"
        dnsRefreshRate: 300s
        protocolDetectionTimeout: 1s
        privileged: false
        enableCoreDump: false
        statusPort: 15020
        readinessInitialDelaySeconds: 1
        readinessPeriodSeconds: 2
        readinessFailureThreshold: 30
        includeIPRanges: "*"
        excludeIPRanges: ""
        excludeOutboundPorts: ""
        kubevirtInterfaces: ""
        includeInboundPorts: "*"
        excludeInboundPorts: ""
        autoInject: enabled
        envoyStatsd:
          enabled: false
          host: # example: statsd-svc.istio-system
          port: # example: 9125
        envoyMetricsService:
          enabled: false
          host: # example: metrics-service.istio-system
          port: # example: 15000
        tracer: "zipkin"
      proxy_init:
        image: proxy_init
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 10m
            memory: 10Mi
      imagePullPolicy: Always
      controlPlaneSecurityEnabled: true
      disablePolicyChecks: true
      policyCheckFailOpen: false
      enableTracing: true
      tracer:
        lightstep:
          address: ""                # example: lightstep-satellite:443
          accessToken: ""            # example: abcdefg1234567
          secure: true               # example: true|false
          cacertPath: ""             # example: /etc/lightstep/cacert.pem
        zipkin:
          address: ""
        datadog:
          address: "$(HOST_IP):8126"
      mtls:
        enabled: false
      imagePullSecrets: []
      arch:
        amd64: 2
        s390x: 2
        ppc64le: 2
      oneNamespace: false
      defaultNodeSelector: {}
      configValidation: true
      meshExpansion:
        enabled: false
        useILB: false
      multiCluster:
        enabled: false
      defaultResources:
        requests:
          cpu: 10m
      defaultPodDisruptionBudget:
        enabled: true
      priorityClassName: ""
      useMCP: true
      trustDomain: ""
      outboundTrafficPolicy:
        mode: ALLOW_ANY
      sds:
        enabled: false
        udsPath: ""
      meshNetworks: {}
      localityLbSetting:
        enabled: true
      enableHelmTest: false

    pilot:
      autoscaleEnabled: true
      autoscaleMin: 1
      autoscaleMax: 5
      replicaCount: 1
      image: pilot
      traceSampling: 1.0
      configNamespace: istio-config
      appNamespaces: []
      env:
        GODEBUG: gctrace=1
      cpu:
        targetAverageUtilization: 80
      nodeSelector: {}
      tolerations: []
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      keepaliveMaxServerConnectionAge: 30m
      deploymentLabels:
      meshNetworks:
        networks: {}
      configMap: true
      ingress:
        ingressService: istio-ingressgateway
        ingressControllerMode: "OFF"
        ingressClass: istio
      telemetry:
        enabled: true
      policy:
        enabled: false
      useMCP: true

    mixer:
      adapters:
        stdio:
          enabled: false
          outputAsJson: false
        prometheus:
          enabled: true
          metricsExpiryDuration: 10m
        kubernetesenv:
          enabled: true
        stackdriver:
          enabled: false
          auth:
            appCredentials: false
            apiKey: ""
            serviceAccountPath: ""
          tracer:
            enabled: false
            sampleProbability: 1
        useAdapterCRDs: false

      telemetry:
        image: mixer
        replicaCount: 1
        autoscaleEnabled: true
        sessionAffinityEnabled: false
        loadshedding:
          mode: enforce
          latencyThreshold: 100ms
        reportBatchMaxEntries: 100
        reportBatchMaxTime: 1s
        useMCP: true
        nodeSelector: {}
        tolerations: []
        podAntiAffinityLabelSelector: []
        podAntiAffinityTermLabelSelector: []

      policy:
        image: mixer
        adapters:
          kubernetesenv:
            enabled: true

    galley:

    citadel:
      image: citadel
      selfSigned: true # indicate if self-signed CA is used.
      trustDomain: cluster.local # indicate the domain used in SPIFFE identity URL
      enableNamespacesByDefault: true
      dnsCerts:
        istio-pilot-service-account.istio-system: istio-pilot.istio-system

    certmanager:
      hub: quay.io/jetstack
      tag: v0.6.2
      image: cert-manager-controller

    nodeagent:
      image: node-agent-k8s

    gateways:
      istio-egressgateway:
        autoscaleEnabled: true
        zvpn:
          suffix: global
          enabled: true
        drainDuration: 45s
        connectTimeout: 10s
        env:
          ISTIO_META_ROUTER_MODE: "sni-dnat"
        ports:
          - port: 80
            name: http2
          - port: 443
            name: https
          - port: 15443
            targetPort: 15443
            name: tls
        secretVolumes:
          - name: egressgateway-certs
            secretName: istio-egressgateway-certs
            mountPath: /etc/istio/egressgateway-certs
          - name: egressgateway-ca-certs
            secretName: istio-egressgateway-ca-certs
            mountPath: /etc/istio/egressgateway-ca-certs

      istio-ingressgateway:
        autoscaleEnabled: true
        applicationPorts: ""
        debug: info
        domain: ""
        zvpn:
          enabled: true
          suffix: global
        telemetry_domain_name: ""
        env:
          ISTIO_META_ROUTER_MODE: "sni-dnat"
        ports:
          - port: 15020
            targetPort: 15020
            name: status-port
          - port: 80
            targetPort: 80
            name: http2
          - port: 443
            name: https
          - port: 15029
            targetPort: 15029
            name: kiali
          - port: 15030
            targetPort: 15030
            name: prometheus
          - port: 15031
            targetPort: 15031
            name: grafana
          - port: 15032
            targetPort: 15032
            name: tracing
          - port: 15443
            targetPort: 15443
            name: tls
        meshExpansionPorts:
          - port: 15011
            targetPort: 15011
            name: tcp-pilot-grpc-tls
          - port: 8060
            targetPort: 8060
            name: tcp-citadel-grpc-tls
          - port: 853
            targetPort: 853
            name: tcp-dns-tls
        secretVolumes:
          - name: ingressgateway-certs
            secretName: istio-ingressgateway-certs
            mountPath: /etc/istio/ingressgateway-certs
          - name: ingressgateway-ca-certs
            secretName: istio-ingressgateway-ca-certs
            mountPath: /etc/istio/ingressgateway-ca-certs
        telemetry_addon_gateways:
          tracing_gateway:
            name: tracing
            port: 15032
            desPort: 80
            enabled: false
            tls: false
          kiali_gateway:
            name: kiali
            port: 15029
            desPort: 20001
            enabled: false
            tls: false
          grafana_gateway:
            name: grafana
            port: 15031
            desPort: 3000
            enabled: false
            tls: false
          prometheus_gateway:
            name: prometheus
            port: 15030
            desPort: 9090
            enabled: false
            tls: false

    sidecarInjectorWebhook:
      image: sidecar_injector
      enableNamespacesByDefault: false
      rewriteAppHTTPProbe: false
      selfSigned: false
      injectLabel: istio-injection

    prometheus:
      enabled: true
      replicaCount: 1
      hub: docker.io/prom
      tag: v2.8.0
      retention: 6h
      scrapeInterval: 15s
      contextPath: /prometheus
      ingress:
        enabled: false
        hosts:
          - prometheus.local
        annotations:
        tls:
      security:
        enabled: true
      nodeSelector: {}
      tolerations: []
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []

    grafana:
      enabled: false
      replicaCount: 1
      image:
        repository: grafana/grafana
        tag: 6.1.6
      persist: false
      storageClassName: ""
      accessMode: ReadWriteMany
      security:
        enabled: false
        secretName: grafana
        usernameKey: username
        passphraseKey: passphrase

      contextPath: /grafana
      service:
        annotations: {}
        name: http
        type: ClusterIP
        externalPort: 3000
        loadBalancerIP:
        loadBalancerSourceRanges:
      ingress:
        enabled: false
        hosts:
          - grafana.local
        annotations:
        tls:
      datasources:
        datasources.yaml:
          apiVersion: 1
          datasources:
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'istio'
              orgId: 1
              folder: 'istio'
              type: file
              disableDeletion: false
              options:
                path: /var/lib/grafana/dashboards/istio
      nodeSelector: {}
      tolerations: []
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      env: {}
      envSecrets: {}

    tracing:
      enabled: false
      provider: jaeger
      nodeSelector: {}
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      jaeger:
        hub: docker.io/jaegertracing
        tag: 1.12
        memory:
          max_traces: 50000
        spanStorageType: badger
        persist: false
        storageClassName: ""
        accessMode: ReadWriteMany
      zipkin:
        hub: docker.io/openzipkin
        tag: 2.14.2
        probeStartupDelay: 200
        queryPort: 9411
        resources:
          limits:
            cpu: 300m
            memory: 900Mi
          requests:
            cpu: 150m
            memory: 900Mi
        javaOptsHeap: 700
        maxSpans: 500000
        node:
          cpus: 2
      opencensus:
        hub: docker.io/omnition
        tag: 0.1.9
        resources:
          limits:
            cpu: 1
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 400Mi
        exporters:
          stackdriver:
            enable_tracing: true
      service:
        annotations: {}
        name: http
        type: ClusterIP
        externalPort: 9411
      ingress:
        enabled: false
        hosts:
        annotations:
        tls:

    kiali:
      enabled: false
      replicaCount: 1
      hub: docker.io/kiali
      tag: v1.1.0
      contextPath: /kiali
      nodeSelector: {}
      podAntiAffinityLabelSelector: []
      podAntiAffinityTermLabelSelector: []
      ingress:
        enabled: false
        hosts:
          - kiali.local
        annotations:
        tls:
      dashboard:
        secretName: kiali
        usernameKey: username
        passphraseKey: passphrase
        viewOnlyMode: false
        grafanaURL:
        jaegerURL:
      prometheusNamespace:
      createDemoSecret: true
      security:
        enabled: true
        cert_file: /kiali-cert/cert-chain.pem
        private_key_file: /kiali-cert/key.pem

    # TODO: derive from operator API
    version: ""
    clusterResources: true
